/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vistas;

import Clases.Categoria;
import Clases.Hilo;
import Clases.Imagen;
import Clases.ListaImagenes;
import Clases.ListaUsuarios;
import Clases.Nodo;
import Clases.NodoDoble;
import Clases.Usuario;
import java.awt.Desktop;
import java.awt.event.ItemEvent;
import java.io.File;
import java.io.IOException;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Fernando
 */
public class Convertidor extends javax.swing.JFrame {

    /**
     * Creates new form Convertidor
     */
    Principal principal;
    ListaUsuarios listaUsuarios;
    Usuario usuarioSeleccionado;
    Categoria categoriaSeleccionada;
    ListaImagenes listaImagenesSeleccionada;
    ListaImagenes listaColaProcesamiento = new ListaImagenes();
    public int incrementoBarra;
    public int cantidadProcesada;
    public int total;

    public Convertidor(Principal principal, ListaUsuarios lista) {
        initComponents();
        setLocationRelativeTo(null);

        this.principal = principal;
        this.listaUsuarios = lista;
        principal.setVisible(false);

        this.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent ant) {
                principal.setVisible(true);
            }
        });

        this.setVisible(true);

        cargarUsuarios();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lstCategorias = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        lstUsuario = new javax.swing.JComboBox<>();
        btnEjecutarParalelo = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        colaProcesamiento = new javax.swing.JList<>();
        btnJpegABmp = new javax.swing.JCheckBox();
        btnCopiaJpeg = new javax.swing.JCheckBox();
        btnBlancoYNegro = new javax.swing.JCheckBox();
        btnRgb = new javax.swing.JCheckBox();
        btnModificarImagen = new javax.swing.JCheckBox();
        btnAgregar = new javax.swing.JButton();
        btnAbrirCarpeta2 = new javax.swing.JButton();
        barraProgresiva = new javax.swing.JProgressBar();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtConsola = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstImagenes = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(30, 30, 30));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Roboto Bk", 1, 30)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Convertidor");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 0, 230, 50));

        jLabel2.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Cola de procesamiento");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, -1, 20));

        lstCategorias.setBackground(new java.awt.Color(30, 30, 30));
        lstCategorias.setForeground(new java.awt.Color(255, 255, 255));
        lstCategorias.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                lstCategoriasItemStateChanged(evt);
            }
        });
        jPanel1.add(lstCategorias, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 60, 120, -1));

        jLabel3.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Usuario");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 60, -1, 20));

        lstUsuario.setBackground(new java.awt.Color(30, 30, 30));
        lstUsuario.setForeground(new java.awt.Color(255, 255, 255));
        lstUsuario.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                lstUsuarioItemStateChanged(evt);
            }
        });
        jPanel1.add(lstUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 60, 120, -1));

        btnEjecutarParalelo.setBackground(new java.awt.Color(0, 128, 255));
        btnEjecutarParalelo.setFont(new java.awt.Font("Roboto", 1, 13)); // NOI18N
        btnEjecutarParalelo.setForeground(new java.awt.Color(255, 255, 255));
        btnEjecutarParalelo.setText("Ejecutar en paralelo");
        btnEjecutarParalelo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEjecutarParalelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEjecutarParaleloActionPerformed(evt);
            }
        });
        jPanel1.add(btnEjecutarParalelo, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 180, 160, -1));

        jLabel5.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Categoria");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 60, -1, 20));

        colaProcesamiento.setBackground(new java.awt.Color(30, 30, 30));
        colaProcesamiento.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        colaProcesamiento.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        colaProcesamiento.setForeground(new java.awt.Color(255, 255, 255));
        colaProcesamiento.setSelectionBackground(new java.awt.Color(0, 128, 255));
        jScrollPane1.setViewportView(colaProcesamiento);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, 170, 140));

        btnJpegABmp.setBackground(new java.awt.Color(30, 30, 30));
        btnJpegABmp.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        btnJpegABmp.setForeground(new java.awt.Color(255, 255, 255));
        btnJpegABmp.setText("JPEG a BMP");
        jPanel1.add(btnJpegABmp, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 160, -1, -1));

        btnCopiaJpeg.setBackground(new java.awt.Color(30, 30, 30));
        btnCopiaJpeg.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        btnCopiaJpeg.setForeground(new java.awt.Color(255, 255, 255));
        btnCopiaJpeg.setText("Copia JPEG");
        jPanel1.add(btnCopiaJpeg, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 190, -1, -1));

        btnBlancoYNegro.setBackground(new java.awt.Color(30, 30, 30));
        btnBlancoYNegro.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        btnBlancoYNegro.setForeground(new java.awt.Color(255, 255, 255));
        btnBlancoYNegro.setText("Blanco y negro");
        jPanel1.add(btnBlancoYNegro, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 280, -1, -1));

        btnRgb.setBackground(new java.awt.Color(30, 30, 30));
        btnRgb.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        btnRgb.setForeground(new java.awt.Color(255, 255, 255));
        btnRgb.setText("RGB y sepia");
        jPanel1.add(btnRgb, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 220, -1, -1));

        btnModificarImagen.setBackground(new java.awt.Color(30, 30, 30));
        btnModificarImagen.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        btnModificarImagen.setForeground(new java.awt.Color(255, 255, 255));
        btnModificarImagen.setText("Modificar imagen");
        jPanel1.add(btnModificarImagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 250, -1, -1));

        btnAgregar.setBackground(new java.awt.Color(0, 128, 255));
        btnAgregar.setFont(new java.awt.Font("Roboto", 1, 13)); // NOI18N
        btnAgregar.setForeground(new java.awt.Color(255, 255, 255));
        btnAgregar.setText("Agregar");
        btnAgregar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        jPanel1.add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 60, 120, -1));

        btnAbrirCarpeta2.setBackground(new java.awt.Color(0, 128, 255));
        btnAbrirCarpeta2.setFont(new java.awt.Font("Roboto Bk", 0, 12)); // NOI18N
        btnAbrirCarpeta2.setForeground(new java.awt.Color(255, 255, 255));
        btnAbrirCarpeta2.setText("Ahrir carpeta con resultados");
        btnAbrirCarpeta2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAbrirCarpeta2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirCarpeta2ActionPerformed(evt);
            }
        });
        jPanel1.add(btnAbrirCarpeta2, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 250, -1, -1));

        barraProgresiva.setBackground(new java.awt.Color(30, 30, 30));
        barraProgresiva.setForeground(new java.awt.Color(0, 128, 255));
        barraProgresiva.setStringPainted(true);
        jPanel1.add(barraProgresiva, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 320, 440, 20));

        txtConsola.setBackground(new java.awt.Color(30, 30, 30));
        txtConsola.setColumns(20);
        txtConsola.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        txtConsola.setForeground(new java.awt.Color(255, 255, 255));
        txtConsola.setRows(5);
        jScrollPane2.setViewportView(txtConsola);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 350, 440, -1));

        jLabel6.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Imagenes de la categoria");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1, 20));

        lstImagenes.setBackground(new java.awt.Color(30, 30, 30));
        lstImagenes.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lstImagenes.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        lstImagenes.setForeground(new java.awt.Color(255, 255, 255));
        lstImagenes.setSelectionBackground(new java.awt.Color(0, 128, 255));
        jScrollPane3.setViewportView(lstImagenes);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 170, 90));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 750, 450));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEjecutarParaleloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEjecutarParaleloActionPerformed

        try {

            if (listaColaProcesamiento.getSize() != 0) {

                cantidadProcesada = 0;
                boolean jpgABmp = btnJpegABmp.isSelected();
                boolean copiaJpg = btnCopiaJpeg.isSelected();
                boolean rgb = btnRgb.isSelected();
                boolean modificar = btnModificarImagen.isSelected();
                boolean blancoNegro = btnBlancoYNegro.isSelected();

                int efectos = 0;
                if (jpgABmp) {
                    efectos = efectos + 1;
                }
                if (copiaJpg) {
                    efectos = efectos + 1;
                }
                if (rgb) {
                    efectos = efectos + 1;
                }
                if (modificar) {
                    efectos = efectos + 1;
                }
                if (blancoNegro) {
                    efectos = efectos + 1;
                }
                if (efectos > 0) {
                    txtConsola.setText("");
                    barraProgresiva.setValue(0);

                    this.incrementoBarra = (int) Math.round(100.0 / (this.listaColaProcesamiento.getSize() * efectos));

                    total = (this.listaColaProcesamiento.getSize() * efectos);
                    System.out.println("***********************");
                    System.out.println(incrementoBarra);
                    int i = 0;
                    for (NodoDoble nodo = ((NodoDoble) this.listaColaProcesamiento.peek()); nodo != null; nodo = nodo.siguiente) {
                        i = i + 1;
                        Hilo imagen = new Hilo(((Imagen) nodo.getImagen()).getNombre(), ((Imagen) nodo.getImagen()).getDireccion(), jpgABmp, copiaJpg, rgb, modificar, blancoNegro, this, i, nodo);
                        Thread hilo = new Thread(imagen);
                        hilo.start();
                    }

                } else {
                    JOptionPane.showMessageDialog(null, "No hay ningún efecto seleccionado");
                }
            } else {
                JOptionPane.showMessageDialog(null, "La cola de procesamiento esta vacia");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Ocurrió un error, intentelo de nuevo");
        }
    }//GEN-LAST:event_btnEjecutarParaleloActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        if (this.categoriaSeleccionada != null) {
            for (NodoDoble nodo = ((NodoDoble) this.categoriaSeleccionada.getImagenes().peek()); nodo != null; nodo = nodo.siguiente) {
                Imagen imagenPros = (Imagen) nodo.getImagen();
                this.listaColaProcesamiento.add(imagenPros);
            }

            actualizarColaProcesamiento();
        } else {
            JOptionPane.showMessageDialog(null, "No hay imagenes en la lista seleccionada");
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void lstUsuarioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_lstUsuarioItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            this.usuarioSeleccionado = listaUsuarios.find(lstUsuario.getSelectedItem().toString());

            cargarCategorias();

        }

    }//GEN-LAST:event_lstUsuarioItemStateChanged

    private void lstCategoriasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_lstCategoriasItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {

            for (Categoria categoria : usuarioSeleccionado.getCategorias()) {

                if (categoria.getNombreCategoria().equals(lstCategorias.getSelectedItem().toString())) {
                    this.categoriaSeleccionada = categoria;
                    break;
                }

            }

            cargarImagenes();

        }
    }//GEN-LAST:event_lstCategoriasItemStateChanged

    private void btnAbrirCarpeta2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirCarpeta2ActionPerformed
        try {
            // Obtenemos el directorio de la carpeta temporal en el escritorio
            String path = System.getProperty("user.home") + "/Desktop/Temporal";

            // Creamos un objeto File con la ruta de la carpeta
            File folder = new File(path);

            // Abrimos la carpeta en el explorador de Windows
            Desktop.getDesktop().open(folder);
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnAbrirCarpeta2ActionPerformed

    private void cargarUsuarios() {

        for (Nodo nodo = ((Nodo) this.listaUsuarios.peek()); nodo != null; nodo = nodo.siguiente) {

            lstUsuario.addItem(((Usuario) nodo.getUsuario()).getNombreUsuario());

        }
    }

    public void agregarTextoConsola(String texto) {
        txtConsola.append(texto + "\n");
        txtConsola.setCaretPosition(txtConsola.getDocument().getLength());
    }

    private void cargarCategorias() {

        lstCategorias.removeAllItems();
        for (Categoria categoria : usuarioSeleccionado.getCategorias()) {
            lstCategorias.addItem(categoria.getNombreCategoria());
        }

    }

    public void barra(int aumento) {
        barraProgresiva.setValue(barraProgresiva.getValue() + aumento);

    }

    private void cargarImagenes() {
        DefaultListModel modelo = new DefaultListModel();

        for (NodoDoble nodo = ((NodoDoble) this.categoriaSeleccionada.getImagenes().peek()); nodo != null; nodo = nodo.siguiente) {
            modelo.addElement(((Imagen) nodo.getImagen()).getNombre());
        }

        lstImagenes.setModel(modelo);
    }

    public void actualizarColaProcesamiento() {
        DefaultListModel modelo = new DefaultListModel();

        for (NodoDoble nodo = ((NodoDoble) this.listaColaProcesamiento.peek()); nodo != null; nodo = nodo.siguiente) {
            modelo.addElement(((Imagen) nodo.getImagen()).getNombre());
        }

        colaProcesamiento.setModel(modelo);
    }

    public void borrarElementoCola(NodoDoble nodo) {
        this.listaColaProcesamiento.delete(nodo);
    }
    
    public void llenarBarra(){
        this.barraProgresiva.setValue(100);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar barraProgresiva;
    private javax.swing.JButton btnAbrirCarpeta2;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JCheckBox btnBlancoYNegro;
    private javax.swing.JCheckBox btnCopiaJpeg;
    private javax.swing.JButton btnEjecutarParalelo;
    private javax.swing.JCheckBox btnJpegABmp;
    private javax.swing.JCheckBox btnModificarImagen;
    private javax.swing.JCheckBox btnRgb;
    private javax.swing.JList<String> colaProcesamiento;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JComboBox<String> lstCategorias;
    private javax.swing.JList<String> lstImagenes;
    private javax.swing.JComboBox<String> lstUsuario;
    private javax.swing.JTextArea txtConsola;
    // End of variables declaration//GEN-END:variables
}
